diff -Naur .\wildmidi-wildmidi-0.4.1-orig/include/config.h .\wildmidi-wildmidi-0.4.1/include/config.h
--- .\wildmidi-wildmidi-0.4.1-orig/include/config.h	1970-01-01 01:00:00 +0100
+++ .\wildmidi-wildmidi-0.4.1/include/config.h	2017-05-29 21:58:07 +0200
@@ -0,0 +1,74 @@
+/* config.h -- generated from config.h.cmake  */
+
+/* Name of package */
+#define PACKAGE "wildmidi"
+
+/* Define to the home page for this package. */
+#define PACKAGE_URL "http://www.mindwerks.net/projects/wildmidi/"
+
+/* Define to the address where bug reports for this package should be sent. */
+#define PACKAGE_BUGREPORT "https://github.com/Mindwerks/wildmidi/issues"
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME "WildMidi"
+
+/* Define to the full name and version of this package. */
+#define PACKAGE_STRING "WildMidi 0.4.1"
+
+/* Define to the one symbol short name of this package. */
+#define PACKAGE_TARNAME "wildmidi"
+
+/* Define to the version of this package. */
+#define PACKAGE_VERSION "0.4.1"
+
+/* Version number of package */
+#define VERSION "0.4.1"
+
+/* Define this to the location of the wildmidi config file */
+#define WILDMIDI_CFG "wildmidi.cfg"
+
+/* Define if the C compiler supports the `inline' keyword. */
+#define HAVE_C_INLINE
+/* Define if the C compiler supports the `__inline__' keyword. */
+//#cmakedefine HAVE_C___INLINE__
+/* Define if the C compiler supports the `__inline' keyword. */
+//#cmakedefine HAVE_C___INLINE
+#if !defined(HAVE_C_INLINE) && !defined(__cplusplus)
+# ifdef HAVE_C___INLINE__
+#  define inline __inline__
+# elif defined(HAVE_C___INLINE)
+#  define inline __inline
+# else
+#  define inline
+# endif
+#endif
+
+/* Define if the compiler has the `__builtin_expect' built-in function */
+//#cmakedefine HAVE___BUILTIN_EXPECT
+#ifndef HAVE___BUILTIN_EXPECT
+#define __builtin_expect(x,c) x
+#endif
+
+/* define this if you are running a bigendian system (motorola, sparc, etc) */
+//#cmakedefine WORDS_BIGENDIAN 1
+
+/* define this if building for AmigaOS variants */
+//#cmakedefine WILDMIDI_AMIGA 1
+
+/* Define if you have the <stdint.h> header file. */
+#define HAVE_STDINT_H
+
+/* Define if you have the <inttypes.h> header file. */
+//#cmakedefine HAVE_INTTYPES_H
+
+/* Define our audio drivers */
+/*#cmakedefine HAVE_LINUX_SOUNDCARD_H
+#cmakedefine HAVE_SYS_SOUNDCARD_H
+#cmakedefine HAVE_MACHINE_SOUNDCARD_H
+#cmakedefine HAVE_SOUNDCARD_H
+
+#cmakedefine AUDIODRV_ALSA
+#cmakedefine AUDIODRV_OSS
+#cmakedefine AUDIODRV_OPENAL
+#cmakedefine AUDIODRV_AHI
+*/
\ No newline at end of file
diff -Naur .\wildmidi-wildmidi-0.4.1-orig/src/file_io.c .\wildmidi-wildmidi-0.4.1/src/file_io.c
--- .\wildmidi-wildmidi-0.4.1-orig/src/file_io.c	2017-02-26 18:30:45 +0100
+++ .\wildmidi-wildmidi-0.4.1/src/file_io.c	2017-06-03 23:13:11 +0200
@@ -117,8 +117,7 @@
     struct ffblk f;
 #elif defined(_WIN32)
     int buffer_fd;
-    HANDLE h;
-    WIN32_FIND_DATA wfd;
+    WIN32_FILE_ATTRIBUTE_DATA wfd;
 #elif defined(__OS2__) || defined(__EMX__)
     int buffer_fd;
     HDIR h = HDIR_CREATE;
@@ -186,12 +185,11 @@
     }
     *size = f.ff_fsize;
 #elif defined(_WIN32)
-    if ((h = FindFirstFile(buffer_file, &wfd)) == INVALID_HANDLE_VALUE) {
+    if (!GetFileAttributesExA(buffer_file, GetFileExInfoStandard, &wfd)) {
         _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_STAT, filename, ENOENT);
         free(buffer_file);
         return NULL;
     }
-    FindClose(h);
     if (wfd.nFileSizeHigh != 0) /* too big */
         *size = 0xffffffff;
     else *size = wfd.nFileSizeLow;
