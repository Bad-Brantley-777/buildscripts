diff -rupN libiconv/srclib/signal.in.h libiconv-1.14/srclib/signal.in.h
--- libiconv/srclib/signal.in.h	2011-08-07 15:42:06.000000000 +0200
+++ libiconv-1.14/srclib/signal.in.h	2013-12-12 14:41:48.442936362 +0100
@@ -175,6 +175,10 @@ typedef int verify_NSIG_constraint[NSIG
 #   undef sigismember
 #  endif
 # else
+#  ifdef GEKKO
+/* hide the dummy function from sys/signal.h */
+#   undef sigismember
+#  endif
 _GL_FUNCDECL_SYS (sigismember, int, (const sigset_t *set, int sig)
                                     _GL_ARG_NONNULL ((1)));
 # endif
@@ -188,6 +192,10 @@ _GL_CXXALIASWARN (sigismember);
 #   undef sigemptyset
 #  endif
 # else
+#  ifdef GEKKO
+/* hide the dummy function from sys/signal.h */
+#   undef sigemptyset
+#  endif
 _GL_FUNCDECL_SYS (sigemptyset, int, (sigset_t *set) _GL_ARG_NONNULL ((1)));
 # endif
 _GL_CXXALIAS_SYS (sigemptyset, int, (sigset_t *set));
@@ -200,6 +208,10 @@ _GL_CXXALIASWARN (sigemptyset);
 #   undef sigaddset
 #  endif
 # else
+#  ifdef GEKKO
+/* hide the dummy function from sys/signal.h */
+#   undef sigaddset
+#  endif
 _GL_FUNCDECL_SYS (sigaddset, int, (sigset_t *set, int sig)
                                   _GL_ARG_NONNULL ((1)));
 # endif
@@ -213,6 +225,10 @@ _GL_CXXALIASWARN (sigaddset);
 #   undef sigdelset
 #  endif
 # else
+#  ifdef GEKKO
+/* hide the dummy function from sys/signal.h */
+#   undef sigdelset
+#  endif
 _GL_FUNCDECL_SYS (sigdelset, int, (sigset_t *set, int sig)
                                   _GL_ARG_NONNULL ((1)));
 # endif
@@ -226,6 +242,10 @@ _GL_CXXALIASWARN (sigdelset);
 #   undef sigfillset
 #  endif
 # else
+#  ifdef GEKKO
+/* hide the dummy function from sys/signal.h */
+#   undef sigfillset
+#  endif
 _GL_FUNCDECL_SYS (sigfillset, int, (sigset_t *set) _GL_ARG_NONNULL ((1)));
 # endif
 _GL_CXXALIAS_SYS (sigfillset, int, (sigset_t *set));
diff -Naur libiconv-1.14-orig/include/iconv.h.build.in libiconv-1.14/include/iconv.h.build.in
--- libiconv-1.14-orig/include/iconv.h.build.in	2011-08-07 19:49:04.000000000 +0200
+++ libiconv-1.14/include/iconv.h.build.in	2016-06-21 22:53:20.141225957 +0200
@@ -48,8 +48,8 @@
    from iconv_open().) */
 
 /* Define iconv_t ourselves. */
-#undef iconv_t
-#define iconv_t libiconv_t
+//#undef iconv_t
+//#define iconv_t libiconv_t
 typedef void* iconv_t;
 
 /* Get size_t declaration.
@@ -74,7 +74,7 @@
 /* Allocates descriptor for code conversion from encoding ‘fromcode’ to
    encoding ‘tocode’. */
 #ifndef LIBICONV_PLUG
-#define iconv_open libiconv_open
+//#define iconv_open libiconv_open
 #endif
 extern LIBICONV_DLL_EXPORTED iconv_t iconv_open (const char* tocode, const char* fromcode);
 
@@ -84,13 +84,13 @@
    Decrements ‘*inbytesleft’ and increments ‘*inbuf’ by the same amount.
    Decrements ‘*outbytesleft’ and increments ‘*outbuf’ by the same amount. */
 #ifndef LIBICONV_PLUG
-#define iconv libiconv
+//#define iconv libiconv
 #endif
 extern LIBICONV_DLL_EXPORTED size_t iconv (iconv_t cd, @ICONV_CONST@ char* * inbuf, size_t *inbytesleft, char* * outbuf, size_t *outbytesleft);
 
 /* Frees resources allocated for conversion descriptor ‘cd’. */
 #ifndef LIBICONV_PLUG
-#define iconv_close libiconv_close
+//#define iconv_close libiconv_close
 #endif
 extern LIBICONV_DLL_EXPORTED int iconv_close (iconv_t cd);
 
diff -Naur libiconv-1.14-orig/include/iconv.h.in libiconv-1.14/include/iconv.h.in
--- libiconv-1.14-orig/include/iconv.h.in	2011-08-07 19:48:03.000000000 +0200
+++ libiconv-1.14/include/iconv.h.in	2016-06-21 22:53:14.741226252 +0200
@@ -42,8 +42,8 @@
    from iconv_open().) */
 
 /* Define iconv_t ourselves. */
-#undef iconv_t
-#define iconv_t libiconv_t
+//#undef iconv_t
+//#define iconv_t libiconv_t
 typedef void* iconv_t;
 
 /* Get size_t declaration.
@@ -68,7 +68,7 @@
 /* Allocates descriptor for code conversion from encoding ‘fromcode’ to
    encoding ‘tocode’. */
 #ifndef LIBICONV_PLUG
-#define iconv_open libiconv_open
+//#define iconv_open libiconv_open
 #endif
 extern iconv_t iconv_open (const char* tocode, const char* fromcode);
 
@@ -78,13 +78,13 @@
    Decrements ‘*inbytesleft’ and increments ‘*inbuf’ by the same amount.
    Decrements ‘*outbytesleft’ and increments ‘*outbuf’ by the same amount. */
 #ifndef LIBICONV_PLUG
-#define iconv libiconv
+//#define iconv libiconv
 #endif
 extern size_t iconv (iconv_t cd, @ICONV_CONST@ char* * inbuf, size_t *inbytesleft, char* * outbuf, size_t *outbytesleft);
 
 /* Frees resources allocated for conversion descriptor ‘cd’. */
 #ifndef LIBICONV_PLUG
-#define iconv_close libiconv_close
+//#define iconv_close libiconv_close
 #endif
 extern int iconv_close (iconv_t cd);
 
